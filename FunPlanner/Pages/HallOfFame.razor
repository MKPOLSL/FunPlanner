@page "/hall-of-fame"
@using System.Net.Http.Json
@using FunPlanner.Components
@using FunPlannerShared.Controllers
@using FunPlannerShared.Data.Entities
@inject IPersonController personController
@inject HttpClient httpClient
@inject IDialogService DialogService

<h3>Koledzy z pracy</h3>

<MudTable Items="@Elements" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@loading" LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>Użytkownik</MudTh>
        <MudTh>Punkty</MudTh>
        <MudTh>Dodaj notkę</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.FirstName @context.LastName</MudTd>
        <MudTd DataLabel="Points">@context.Points</MudTd>
        <MudButton OnClick="() => AddNote(context.Id)">Dodaj notatkę</MudButton>
        @*<MudTd DataLabel="AddNote">@context.CreatedEvents?.Count()</MudTd>*@
    </RowTemplate>
</MudTable>

@code {
    private bool loading = true;
    private ICollection<Person> Elements = new List<Person>();

    protected override async Task OnInitializedAsync()
    {
        Elements = await personController.Get();
        loading = false;
    }

    private async Task AddNote(Guid personId)
    {
        var parameters = new DialogParameters();
        parameters.Add("PersonId", personId);
        DialogService.Show<AddNote>("Dodaj notatkę", parameters, new DialogOptions() { MaxWidth = MaxWidth.Medium, FullWidth = true });
        Elements = await personController.Get();
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }
}