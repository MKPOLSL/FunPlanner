@page "/authentication/login"

@using System.Security.Claims
@using FunPlanner.Models
@using Microsoft.Extensions.Logging
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject UserAuthorizationService authorizationService
@inject Blazored.LocalStorage.ILocalStorageService localStorageService
@inject ISnackbar snackbar
@using MudBlazor
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<MudPaper MaxWidth="400px" Class="pa-16 ma-auto">
    <MudText Typo="Typo.h5">Logowanie</MudText>
    <MudForm @bind-IsValid="@success" @bind-Errors="@errors">
        <MudTextField T="string" @bind-Value="userDto.Email" Label="Adres e-mail" Variant="Variant.Text" Required="true" RequiredError="Adres e-mail jest wymagany"
                      Validation="@(new EmailAddressAttribute() {ErrorMessage = "Wprowadzony adres e-mail jest niepoprawny"})" />
        <MudTextField T="string" @bind-Value="userDto.Password" Label="Hasło" Variant="Variant.Text"
                      InputType="InputType.Password" Required="true"
                      RequiredError="Hasło jest wymagane" />
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="!success || submitting" Class="mt-6" OnClick="SignIn">Zaloguj</MudButton>
    </MudForm>
</MudPaper>

@code {
    bool success;
    string[] errors = { };
    bool submitting;
    private UserLoginDto userDto;

    protected override Task OnInitializedAsync()
    {
        userDto = new UserLoginDto();
        return base.OnInitializedAsync();
    }

    private async Task SignIn()
    {
        try
        {
            submitting = true;
            var user = await authorizationService.LoginUser(userDto);
            if (user != null)
            {
                ((CustomAuthStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(user);
                NavigationManager.NavigateTo("/");
            }
            else
            {
                snackbar.Add("Nie odnaleziono użytkownika z pasującymi danymi", Severity.Error);
            }
        }
        finally {
            submitting = false;
        }
    }
}